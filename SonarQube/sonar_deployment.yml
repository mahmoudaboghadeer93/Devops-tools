apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: sonar
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: sonarqube
    app.kubernetes.io/version: 8.7.1
    helm.sh/chart: sonarqube-1.3.1
  name: sonar-sonarqube
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: sonar
      app.kubernetes.io/name: sonarqube
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: sonar
        app.kubernetes.io/name: sonarqube
    spec:
      containers:
      - image: sonarqube:8.7.1-community
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/system/status
            port: http
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        name: sonarqube
        ports:
        - containerPort: 9000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/system/status
            port: http
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        securityContext:
          runAsUser: 1000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/sonarqube/conf
          name: config
        - mountPath: /opt/sonarqube/data
          name: sonarqube
          subPath: data
        - mountPath: /opt/sonarqube/extensions
          name: sonarqube
          subPath: extensions
        - mountPath: /opt/sonarqube/certs
          name: sonarqube
          subPath: certs
        - mountPath: /opt/sonarqube/logs
          name: sonarqube
          subPath: logs
        - mountPath: /opt/sonarqube/temp
          name: sonarqube
          subPath: temp
        - mountPath: /tmp
          name: tmp-dir
      initContainers:
      - command:
        - /opt/scripts/chown-volume-mounts.sh
        image: alpine:3
        imagePullPolicy: IfNotPresent
        name: chmod-volume-mounts
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/scripts/chown-volume-mounts.sh
          name: commands
          subPath: chown-volume-mounts.sh
        - mountPath: /opt/sonarqube
          name: sonarqube
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
      serviceAccount: sonar-sonarqube
      serviceAccountName: sonar-sonarqube
      volumes:
      - name: sonarqube
        persistentVolumeClaim:
          claimName: sonarqube-efs-pvc
      - configMap:
          defaultMode: 493
          name: sonar-sonarqube-commands
        name: commands
      - configMap:
          defaultMode: 420
          name: sonar-sonarqube-config
        name: config
      - emptyDir: {}
        name: tmp-dir
